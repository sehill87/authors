{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { NewComponent } from './new/new.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  // { path: '', pathMatch: 'full', redirectTo: '/' },\n  { path: '', component: DashboardComponent},\n  { path: 'new', component: NewComponent},\n  { path: 'edit/:id', component: EditComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container jumbotron\\\">\\n  <div style=\\\"text-align:left\\\">\\n    <h1>\\n      Favorite authors:\\n    </h1>\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  newAuthor: any;\n  editAuthor: any;\n  authors;\n  author;\n  id: String;\n\n  constructor(private _httpService: HttpService) {}\n  ngOnInit() {\n    this.newAuthor = { name: \"\" }\n    this.editAuthor = { _id: \"\", name: \"\" }\n    this.getAuthorsFromService();\n    // this.getTaskFromService();\n  }\n  getAuthorsFromService() {\n    let observable = this._httpService.getAuthors()\n    observable.subscribe(data =>  {\n      console.log(\"Got our authors!\", data)\n      this.authors = data;\n      console.log(this.authors)\n\n    });\n  }\n  getAuthorFromService(id) {\n    let observable = this._httpService.getAuthor(id)\n    observable.subscribe(data => {\n      console.log(\"Got the author!\", data)\n      this.author = data;\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewComponent,\n    EditComponent,\n    DashboardComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a style='text-decoration: underline' routerLink='/new' routerLinkActive='active' class=''>Add an author</a>\\n<table class='table table-striped'>\\n  <thead class='thead-dark'>\\n    <tr>\\n      <th scope='col'>Author</th>\\n      <th scope='col'>Actions available</th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let author of authors\\\">\\n    <td>{{ author.name }}</td>\\n    <td>\\n      \\n      <button style='margin-left: 15px;' class='btn btn-success btn-sm' [routerLink]=\\\"['/edit/', author._id]\\\">Update</button>\\n      <button style='margin-left: 15px;' class='btn btn-warning btn-sm' (click)=\\\"deleteAuthorFromService(author._id)\\\">Delete</button>\\n    </td>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    authors;\n    author;\n    id: String;\n\n  constructor(private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.getAuthorsFromService()\n  }\n  getAuthorsFromService() {\n    let observable = this._httpService.getAuthors()\n    observable.subscribe(data =>  {\n      console.log(\"Got our authors!\", data)\n      this.authors = data;\n      console.log(this.authors)\n    });\n  }\n  deleteAuthorFromService(id) {\n    console.log('Click will delete', id)\n    let observable = this._httpService.deleteAuthor(id);\n    observable.subscribe (data => {\n      this.getAuthorsFromService();\n    })\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container jumbotron\\\" style=\\\"text-align:left\\\">\\n  <a style='text-decoration: underline' routerLink='/' routerLinkActive='active' class=''>Home</a>\\n  <h5>Edit this author</h5>\\n  <form *ngIf='editAuthor._id' (submit)=\\\"onSubmitEditAuthor()\\\">\\n    <div class='form-group row'>\\n      Name: <input style='margin-left: 10px;' class='form-control mx-sm-3' type='text' name='editAuthor.name' [(ngModel)]='editAuthor.name' />\\n\\n    </div>\\n    <div class='form-group row'>\\n      <input style='margin-left: 15px;'class='btn btn-primary' type='submit' value='Update' />\\n      <a style='margin-left: 15px;' routerLink='/' routerLinkActive='active' class='btn btn-warning'>Cancel</a>\\n    </div>\\n    {{errors.errors.name.message}}\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  editAuthor: any;\n  id: String;\n  errors: Object;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.editAuthor = {}\n    this.getAuthorFromServiceById();\n    this.errors = {\n      errors: {\n        name: ''\n      }\n    }\n  }\n  getAuthorFromServiceById() {\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n  \n      let observable = this._httpService.getAuthor(params['id'])\n      observable.subscribe(data =>  {\n        console.log(\"Got our author!\", data)\n        this.editAuthor = data;\n      });\n    });\n  }\n  onSubmitEditAuthor() {\n    console.log(\"this will edit a author\")\n    let observable = this._httpService.editAuthor(this.editAuthor._id, this.editAuthor);\n    observable.subscribe (data => {\n      if (data['errors']) {\n        console.log(data['errors'])\n        this.errors = data['errors']\n        // this.getAuthorFromServiceById();\n      } else {\n        this._router.navigate(['/'])\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) { \n  \n  }\n  getAuthors(){\n    // let tempObservable = this._http.get('/tasks');\n    // tempObservable.subscribe(data=> console.log('Got our tasks!', data))\n    return this._http.get('api');\n  }\n  getAuthor(id){\n    // let tempObservable = this._http.get('/tasks/5be61addf7319843838a0560')\n    // tempObservable.subscribe(data=> console.log('Got one task!!!', data))\n    return this._http.get('api/' + id)\n  }\n  addAuthor(newauthor) {\n    return this._http.post('api', newauthor)\n  }\n  editAuthor(id, editauthor) {\n    return this._http.put('api/' + id, editauthor)\n  }\n  deleteAuthor(id) {\n    return this._http.delete('api/' + id)\n  }\n}\n\n\n ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy9uZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n    <a style='text-decoration: underline' routerLink='/' routerLinkActive='active' class=''>Home</a>\\n    <h5 style='margin-top: 20px;'>Add a new author:</h5>\\n</div>\\n<form (submit)=\\\"onSubmitAddAuthor()\\\">\\n\\n    <div class='form-group row'>\\n        Name: <input style='margin-left: 10px;' type='text' name='newAuthor.name' [(ngModel)]='newAuthor.name' />\\n    </div>\\n    \\n    <div class='form-group row'>\\n        <input style='margin-left: 15px;' class='btn btn-primary' type='submit' value='Submit' />\\n        <a style='margin-left: 15px;' routerLink='/' routerLinkActive='active' class='btn btn-secondary'>Cancel</a>\\n    </div>\\n    {{errors.errors.name.message}}\\n    <!-- {{errors.errors.name.message}} -->\\n    <!-- {{errors.errors.name.message}} -->\\n\\n    \\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newAuthor: any;\n  id: String;\n  errors: object;\n\n  constructor(private _httpService: HttpService, private _route: ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    this.newAuthor = { name: \"\" }\n    this.errors = { \n      errors: {\n        name: \"\"\n      }\n    }\n  }\n  onSubmitAddAuthor() {\n    let observable = this._httpService.addAuthor(this.newAuthor);\n    observable.subscribe (data => {\n      console.log('New author added', data);\n      if (data['errors']) {\n        console.log(data['errors'])\n        this.errors = data['errors']\n        // this._router.navigate(['/new'])\n      } else {\n        this._router.navigate(['/'])\n      }\n    })\n    this.newAuthor = { name: \"\" }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}